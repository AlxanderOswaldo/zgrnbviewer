/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package org.tvl.netbeans.zgrviewer;

import java.awt.Component;
import java.awt.Container;
import java.awt.Dialog;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import net.claribole.zgrviewer.ConfigManager;

final class GraphVizOptionsPanel extends javax.swing.JPanel {

    private final GraphVizOptionsPanelController controller;

    GraphVizOptionsPanel(GraphVizOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("rawtypes")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        dynaspotCheckBox = new javax.swing.JCheckBox();
        antialiasingCheckBox = new javax.swing.JCheckBox();
        sdZoomCheckBox = new javax.swing.JCheckBox();
        sdZoomSpeedSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        nodeMagnificationSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        highlightColorLabelButton = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        neatoBrowseButton = new javax.swing.JButton();
        dotExecutableField = new javax.swing.JTextField();
        twopiBrowseButton = new javax.swing.JButton();
        circoBrowseButton = new javax.swing.JButton();
        dotBrowseButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        twopiExecutableField = new javax.swing.JTextField();
        graphvizFontDirField = new javax.swing.JTextField();
        graphvizFontDirBrowseButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        neatoExecutableField = new javax.swing.JTextField();
        circoExecutableField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 640));

        org.openide.awt.Mnemonics.setLocalizedText(dynaspotCheckBox, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.dynaspotCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(antialiasingCheckBox, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.antialiasingCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(sdZoomCheckBox, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.sdZoomCheckBox.text")); // NOI18N

        sdZoomSpeedSlider.setMajorTickSpacing(1);
        sdZoomSpeedSlider.setMaximum(10);
        sdZoomSpeedSlider.setMinimum(2);
        sdZoomSpeedSlider.setPaintLabels(true);
        sdZoomSpeedSlider.setSnapToTicks(true);
        sdZoomSpeedSlider.setValue(2);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, sdZoomCheckBox, org.jdesktop.beansbinding.ELProperty.create("${selected}"), sdZoomSpeedSlider, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel1.text")); // NOI18N

        nodeMagnificationSpinner.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel7.text")); // NOI18N

        highlightColorLabelButton.setBackground(new java.awt.Color(255, 0, 102));
        org.openide.awt.Mnemonics.setLocalizedText(highlightColorLabelButton, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.highlightColorLabelButton.text")); // NOI18N
        highlightColorLabelButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        highlightColorLabelButton.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dynaspotCheckBox)
                            .addComponent(antialiasingCheckBox)
                            .addComponent(sdZoomCheckBox)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(sdZoomSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(nodeMagnificationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(highlightColorLabelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dynaspotCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(antialiasingCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sdZoomCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sdZoomSpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nodeMagnificationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(highlightColorLabelButton))
                .addContainerGap(131, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 311));

        org.openide.awt.Mnemonics.setLocalizedText(neatoBrowseButton, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.neatoBrowseButton.text")); // NOI18N
        neatoBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neatoBrowseButtonActionPerformed(evt);
            }
        });

        dotExecutableField.setText(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.dotExecutableField.text")); // NOI18N
        dotExecutableField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                handleExecutablePropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(twopiBrowseButton, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.twopiBrowseButton.text")); // NOI18N
        twopiBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twopiBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(circoBrowseButton, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.circoBrowseButton.text")); // NOI18N
        circoBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circoBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(dotBrowseButton, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.dotBrowseButton.text")); // NOI18N
        dotBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel4.text")); // NOI18N

        twopiExecutableField.setText(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.twopiExecutableField.text")); // NOI18N
        twopiExecutableField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                handleExecutablePropertyChange(evt);
            }
        });

        graphvizFontDirField.setText(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.graphvizFontDirField.text")); // NOI18N
        graphvizFontDirField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                handleExecutablePropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(graphvizFontDirBrowseButton, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.graphvizFontDirBrowseButton.text")); // NOI18N
        graphvizFontDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphvizFontDirBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel3.text")); // NOI18N

        neatoExecutableField.setText(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.neatoExecutableField.text")); // NOI18N
        neatoExecutableField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                handleExecutablePropertyChange(evt);
            }
        });

        circoExecutableField.setText(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.circoExecutableField.text")); // NOI18N
        circoExecutableField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                handleExecutablePropertyChange(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jLabel2.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dotExecutableField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dotBrowseButton))
                    .addComponent(neatoExecutableField)
                    .addComponent(circoExecutableField)
                    .addComponent(twopiExecutableField)
                    .addComponent(graphvizFontDirField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                        .addComponent(graphvizFontDirBrowseButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(twopiBrowseButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(circoBrowseButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(neatoBrowseButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dotBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dotExecutableField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(neatoBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(neatoExecutableField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(circoBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(circoExecutableField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(twopiBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(twopiExecutableField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(graphvizFontDirBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graphvizFontDirField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab(org.openide.util.NbBundle.getMessage(GraphVizOptionsPanel.class, "GraphVizOptionsPanel.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void dotBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotBrowseButtonActionPerformed
        chooseFile(this, dotExecutableField);
    }//GEN-LAST:event_dotBrowseButtonActionPerformed

    private void neatoBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neatoBrowseButtonActionPerformed
        chooseFile(this, neatoExecutableField);
    }//GEN-LAST:event_neatoBrowseButtonActionPerformed

    private void circoBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circoBrowseButtonActionPerformed
        chooseFile(this, circoExecutableField);
    }//GEN-LAST:event_circoBrowseButtonActionPerformed

    private void twopiBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twopiBrowseButtonActionPerformed
        chooseFile(this, twopiExecutableField);
    }//GEN-LAST:event_twopiBrowseButtonActionPerformed

    private void graphvizFontDirBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphvizFontDirBrowseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graphvizFontDirBrowseButtonActionPerformed

    private void handleExecutablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_handleExecutablePropertyChange
    }//GEN-LAST:event_handleExecutablePropertyChange

    private static void chooseFile(JComponent parent, JTextField field) {
        JFileChooser chooser = createHackedFileChooser();
        chooser.setMultiSelectionEnabled(false);
        File initial = new File(field.getText());
        if (initial.isFile()) {
            chooser.setCurrentDirectory(initial.getParentFile());
            chooser.setSelectedFile(initial);
        }

        int result = chooser.showOpenDialog(parent);
        if (result == JFileChooser.APPROVE_OPTION) {
            String absoluteName = chooser.getSelectedFile().getAbsolutePath();
            field.setText(absoluteName);
        }
    }

    // XXX #18270. Enter doesn't work when expecting folder change,
    // Accessibility problem. We hack default behaviour here.
    /** Creates hacked fileChooser, responding on Enter the way it
     * performs folder change. */
    public static JFileChooser createHackedFileChooser() {
        JFileChooser chooser = new JFileChooser();
        hackFileChooser(chooser);
        return chooser;
    }

    /** Hacks fileChooser, responding on Enter the way it
     * performs folder change. */
    public static void hackFileChooser(final JFileChooser chooser) {
        //chooser.getAccessibleContext().setAccessibleDescription( getString("ACSD_FileEditor") );

        //issue 31605 - make escape work properly
        //Get the existing action key on ESCAPE
        // XXX is this hack still necessary?
        final Object key = chooser.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).get(
            KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));

        Action close = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Component comp = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
                if (key != null) {
                    //if there was an action, do it first
                    Action a = chooser.getActionMap().get(key);
                    if (a != null) {
                        a.actionPerformed(ae);
                    }
                }
                if (comp.getParent() == null) {
                    //then we were editing a file name, and the editor
                    //was removed - we don't want to close the dialog
                    return;
                }

                Container c = chooser.getTopLevelAncestor();
                //The action *may* have already hidden the panel (works
                //intermittently)
                if (c instanceof Dialog) {
                    if (((Dialog) c).isVisible()) {
                        ((Dialog) c).setVisible (false);
                        ((Dialog) c).dispose();
                    }
                }
            }
        };
        chooser.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(
            KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "close");
        chooser.getActionMap().put("close", close);
    }

    void load() {
        ConfigManager.loadConfig();
        dotExecutableField.setText(ConfigManager.m_DotPath.getPath());
        neatoExecutableField.setText(ConfigManager.m_NeatoPath.getPath());
        circoExecutableField.setText(ConfigManager.m_CircoPath.getPath());
        twopiExecutableField.setText(ConfigManager.m_TwopiPath.getPath());
        graphvizFontDirField.setText(ConfigManager.m_GraphVizFontDir.getPath());

        dynaspotCheckBox.setSelected(ConfigManager.DYNASPOT);
        antialiasingCheckBox.setSelected(ConfigManager.isAntialiasing());
        sdZoomCheckBox.setSelected(ConfigManager.isSDZoomEnabled());
        sdZoomSpeedSlider.setValue(ConfigManager.getSDZoomFactor());
        nodeMagnificationSpinner.setValue(ConfigManager.MAG_FACTOR);
        highlightColorLabelButton.setBackground(ConfigManager.HIGHLIGHT_COLOR);
    }

    void store() {
        ConfigManager.m_DotPath = new File(dotExecutableField.getText());
        ConfigManager.m_NeatoPath = new File(neatoExecutableField.getText());
        ConfigManager.m_CircoPath = new File(circoExecutableField.getText());
        ConfigManager.m_TwopiPath = new File(twopiExecutableField.getText());
        ConfigManager.m_GraphVizFontDir = new File(graphvizFontDirField.getText());

        ConfigManager.DYNASPOT = dynaspotCheckBox.isSelected();
        ConfigManager.setAntialiasing(antialiasingCheckBox.isSelected());
        ConfigManager.setSDZoomEnabled(sdZoomCheckBox.isSelected());
        ConfigManager.setSDZoomFactor(sdZoomSpeedSlider.getValue());
        //ConfigManager.setMagnificationFactor(nodeMagnificationSpinner.getValue());
        ConfigManager.HIGHLIGHT_COLOR = highlightColorLabelButton.getBackground();

        ConfigManager.saveConfig();
    }

    boolean valid() {
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox antialiasingCheckBox;
    private javax.swing.JButton circoBrowseButton;
    private javax.swing.JTextField circoExecutableField;
    private javax.swing.JButton dotBrowseButton;
    private javax.swing.JTextField dotExecutableField;
    private javax.swing.JCheckBox dynaspotCheckBox;
    private javax.swing.JButton graphvizFontDirBrowseButton;
    private javax.swing.JTextField graphvizFontDirField;
    private javax.swing.JLabel highlightColorLabelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton neatoBrowseButton;
    private javax.swing.JTextField neatoExecutableField;
    private javax.swing.JSpinner nodeMagnificationSpinner;
    private javax.swing.JCheckBox sdZoomCheckBox;
    private javax.swing.JSlider sdZoomSpeedSlider;
    private javax.swing.JButton twopiBrowseButton;
    private javax.swing.JTextField twopiExecutableField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
